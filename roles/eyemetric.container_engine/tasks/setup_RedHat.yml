---
# Installs podman and related tools.
# If an nvidia gpu is installed and drivers are installed, we also configure the container engine to all access to gpu resources

- name: Install Container Management group (podman, buildah, scopeo, and core utilities)
  ansible.builtin.dnf:
    name: "@Container Management"
    state: "{{ container_management_state }}"

- name: Ensure podman-compose is not installed (conflicts with side-by-side docker)
  ansible.builtin.dnf:
    name: podman-compose
    state: absent

- name: Ensure Nvidia drivers are ready for gpu container access config.
  ansible.builtin.command: nvidia-smi
  register: nvidia_check
  changed_when: false
  failed_when: false

- name: Setup podman container gpu access
  when: nvidia_check.rc == 0 # check had an exit code of 0 which means, nvidia is ready
  block:
    - name: Ensure nvidia-container-toolkit is installed
      ansible.builtin.dnf:
        name: nvidia-container-toolkit
        state: "{{ container_management_state }}"

    - name: Set no-cgroups to true
      become: true
      ansible.builtin.lineinfile:
        path: "{{ nvidia_container_runtime_path }}"
        regexp: "^#no-cgroups = false"
        line: "no-cgroups = true"
        # state: "{{ container_management_state }}"
        state: "{{ container_management_state }}"

    - name: Generate CDI specification for NVIDIA GPUs
      ansible.builtin.command: "nvidia-ctk cdi generate --output=/etc/cdi/nvidia.yaml"
      when: container_management_state != "absent"
      args:
        creates: "{{ cdi_spec_path }}"

    - name: Detect number of NVIDIA GPUs
      # when: container_management_state == "present" or container_management_state == "latest"
      ansible.builtin.command: nvidia-smi --query-gpu=name --format=csv,noheader
      register: gpu_list
      failed_when: gpu_list.rc != 0
      changed_when: false

    - name: Enable CDI for Podman
      ansible.builtin.blockinfile:
        path: "{{ containers_conf_path }}"
        block: |
          [engine]
          cdi_enabled = true
        marker: "# {mark} ANSIBLE MANAGED BLOCK - GPU CDI CONFIGURATION"
        create: true
        mode: "0664"
        state: "{{ container_management_state }}"
      when: gpu_list.stdout_lines | length > 0

- name: Install Docker engine
  when: docker_on_rhel
  vars:
    docker_packages_state: "{{ container_management_state }}"
  ansible.builtin.include_role:
    name: geerlingguy.docker

- name: Setup Docker side by side with podman
  when: docker_on_rhel and nvidia_check.rc == 0 # check had an exit code of 0 which means, nvidia is ready
  block:
    - name: Update docker runtime config for cdi
      when: container_management_state != "absent"
      ansible.builtin.script:
        cmd: update_docker_cdi_config.sh
        creates: /etc/docker/daemon.json

    - name: Configure nvidia-container-runtime for Docker
      ansible.builtin.command: nvidia-ctk runtime configure --runtime=docker
      when: container_management_state != "absent"
      changed_when: false

    - name: Ensure Docker is running and enabled
      ansible.builtin.service:
        name: docker
        state: started
        enabled: true
      when: container_management_state != "absent"
